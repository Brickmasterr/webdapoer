<div class="modal fade" id="modalLayanan" tabindex="-1" role="dialog" aria-labelledby="modalLayananLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLayananLabel">Add New Layanan</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="layananForm" action="/dashboard/addlayanan" method="POST">
                    <div class="form-group">
                        <label for="product-name" class="col-form-label">Nama Layanan:</label>
                        <input type="text" name="productName" class="form-control" id="product-name">
                    </div>
                    <div class="form-group">
                        <label for="description" class="col-form-label">Deskripsi:</label>
                        <textarea class="form-control" name="productDescription" id="description"></textarea>
                    </div>
                    <div class="form-group">
                        <label>File upload</label>
                        <input type="file" id="file-upload_Layanan" name="layananImage" class="file-upload-default"
                            accept="image/*">
                        <div class="input-group col-xs-12">
                            <input type="text" class="form-control file-upload-info" disabled
                                placeholder="Upload Image">
                            <span class="input-group-append">
                                <button class="file-upload-browse btn btn-primary" type="button">Upload</button>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                      <h4 class="card-title">Current Photo Product</h4>
                      <img src="//placehold.it/100" id="photoProductView_Layanan" width="80%" height="80%"/>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Send message</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Include jQuery from CDN -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function ConfirmationLayanan(cb, preConfirmFunction) {
        Swal.fire({
            title: "Are you sure? layanan",
            text: "You won't be able to revert this!",
            icon: "warning",
            showLoaderOnConfirm: true,
            showCancelButton: true,
            customClass: {
                confirmButton: 'btn btn-primary btn-lg mr-2',
                cancelButton: 'btn btn-danger btn-lg',
                loader: 'custom-loader',
            },
            preConfirm: preConfirmFunction,
            allowOutsideClick: () => !Swal.isLoading(),
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm"
        }).then((result) => {
            cb(result);
        });
    }

    $(document).ready(function () {
        const ProductPhotoView = $("#photoProductView_Layanan");
        const fileInput = $('#file-upload_Layanan');
        const formData = new FormData();

        // Add an event listener to trigger the file upload when a file is selected
        fileInput.on('change', function (event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    ProductPhotoView.attr('src', e.target.result);
                }
                reader.readAsDataURL(file);
            }
            formData.append('productImage', file);
        });

        // var form = $('#layananForm');

        // form.on('submit', function (event) {
        //     console.log(event.target);
        //     event.preventDefault(); // Mencegah pengiriman form default
        //     ConfirmationLayanan((result) => {
        //         if (result.isConfirmed) {
        //             handleResponse(result.value);
        //         }
        //     }, async function () {
        //         try {
        //             const ttest = await testUpload_Layanan(formData);
        //             return ttest
        //         } catch (error) {
        //             Swal.showValidationMessage(`
        //                 Request failed: ${error}
        //             `);
        //         }
        //     });
        // });

        var form = document.getElementById('layananForm');

        form.addEventListener('submit', function (event) {
            console.log(event);
            event.preventDefault(); // Mencegah pengiriman form default
            ConfirmationLayanan((result) => {
                if (result.isConfirmed) {
                    // console.log(result);
                    // testUpload(); // Panggil fungsi yang diinginkan
                    // console.log('test', fileInput.value);
                    handleResponseLayanan(result.value);
                }
            }, async function() {
                try {
                    const ttest = await testUpload_Layanan(formData);
                    console.log(ttest);
                    return ttest
                    // return false
                } catch (error) {
                    Swal.showValidationMessage(`
                        Request failed: ${error}
                    `);
                }
                // OutputFromTestUpload = ttest;
            })
        });

        const handleResponseLayanan = (data) => {
            // console.log(fileInput.value);
            if (data.ProductPicture) {
                // console.log(data.ProductPicture);
                // fileInput.accept = '*'
                // fileInput.value = data.ProductPicture;
                // Asumsikan response berisi nama file atau path file yang diunggah
                let hiddenInput = document.createElement('input');
                hiddenInput.type = 'hidden';
                hiddenInput.name = 'layananImageHidden';
                hiddenInput.value = data.ProductPicture; // Atau URL dari file yang diunggah

                // Tambahkan input tersembunyi ke form
                form.appendChild(hiddenInput);
                // console.log(fileInput.value);
                // Update the profile picture URL and set it as the src attribute of the image element
                // profilePicture.src = data.profilePictureUrl;
            }
            // Setelah testUpload dijalankan, jika Anda ingin melanjutkan pengiriman form:
            form.submit();
        };

        async function testUpload_Layanan(theData) {
            if (!theData.has('productImage')) {
                throw new Error('File Upload must contain a file');
            }

            try {
                const response = await fetch('/dashboard/upload', {
                    method: 'POST',
                    body: theData
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                const data = await response.json();
                return data;
            } catch (error) {
                console.error('Error:', error);
                throw error;
            }
        }
    });
</script>
